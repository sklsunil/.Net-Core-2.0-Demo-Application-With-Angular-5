<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Demo.API</name>
    </assembly>
    <members>
        <member name="T:Demo.API.Controllers.AccountController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Demo.API.Controllers.AccountController.#ctor(Demo.BLL.IService.IUsersService,Demo.BLL.IService.ITokenStoreService,Demo.DAL.IUnitOfWork,Demo.BLL.IService.IAntiForgeryCookieService)">
            <summary>
            
            </summary>
            <param name="usersService"></param>
            <param name="tokenStoreService"></param>
            <param name="uow"></param>
            <param name="antiforgery"></param>
        </member>
        <member name="M:Demo.API.Controllers.AccountController.Login(Demo.DomainModels.Models.LoginUser)">
            <summary>
            
            </summary>
            <param name="loginUser"></param>
            <returns></returns>
        </member>
        <member name="M:Demo.API.Controllers.AccountController.RefreshToken(System.String)">
            <summary>
            
            </summary>
            <param name="refresh_token"></param>
            <returns></returns>
        </member>
        <member name="M:Demo.API.Controllers.AccountController.AddUser(Demo.DomainModels.Models.AppUser)">
            <summary>
            
            </summary>
            <param name="appUser"></param>
            <returns></returns>
        </member>
        <member name="M:Demo.API.Controllers.AccountController.Logout(System.String)">
            <summary>
            
            </summary>
            <param name="refreshToken"></param>
            <returns></returns>
        </member>
        <member name="T:Demo.API.Controllers.BooksController">
            <summary>
            Books Controller
            </summary>
        </member>
        <member name="M:Demo.API.Controllers.BooksController.#ctor(Demo.BLL.IService.IBookService)">
            <summary>
            Ctor
            </summary>
            <param name="bookService"></param>
        </member>
        <member name="M:Demo.API.Controllers.BooksController.Get">
            <summary>
            GET api/books
            </summary>      
            <remarks>
            Sample request:
             1. GET: /api/books      
            </remarks>      
            <returns>It returns list of book.</returns>
            <response code="200">It returns list of book.</response>
            <response code="400">Bad Request.</response>
            <response code="500">Internal Server Error.</response>
        </member>
        <member name="M:Demo.API.Controllers.BooksController.Get(System.Int32)">
            <summary>
            GET api/books/5
            </summary>      
            <remarks>
            Sample request:
             1. GET: /api/books/5     
            </remarks>      
            <returns>It returns true in case of suceess.</returns>
            <response code="200">It returns book.</response>
            <response code="400">Bad Request.</response>
            <response code="500">Internal Server Error.</response>
        </member>
        <member name="M:Demo.API.Controllers.BooksController.Put(Demo.DomainModels.Models.BookModel)">
            <summary>
            GET api/books
            </summary>
            <remarks>
            Sample request:
             1. GET: /api/books
             2. 
                 {
                 "id": 0,
                 "name": "string",
                 "authors": "string",
                 "numberOfPages": 0,
                 "dateOfPublication": "2018-03-30T15:05:35.072Z"
                 }
            </remarks> 
            <returns>It returns true in case of suceess.</returns>
            <response code="200">It returns book.</response>
            <response code="400">Bad Request.</response>
            <response code="500">Internal Server Error.</response>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Demo.API.Controllers.BooksController.Post(Demo.DomainModels.Models.BookModel)">
            <summary>
            GET api/books
            </summary>
            <remarks>
            Sample request:
             1. GET: /api/books
             2. 
                 {
                 "id": 1,
                 "name": "string",
                 "authors": "string",
                 "numberOfPages": 0,
                 "dateOfPublication": "2018-03-30T15:05:35.072Z"
                 }
            </remarks> 
            <returns>It returns true in case of suceess.</returns>
            <response code="200">It returns book.</response>
            <response code="400">Bad Request.</response>
            <response code="500">Internal Server Error.</response>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Demo.API.Controllers.BooksController.Delete(System.Int32)">
            <summary>
            GET api/books/5
            </summary>
            <remarks>
            Sample request:
             1. GET: /api/books/5        
            </remarks> 
            <returns>It returns true in case of suceess.</returns>
            <response code="200">It returns book.</response>
            <response code="400">Bad Request.</response>
            <response code="500">Internal Server Error.</response> 
            <returns>It returns true in case of suceess.</returns>
        </member>
        <member name="T:Demo.API.Filters.CustomExceptionFilter">
            <summary>
            Custom Exception Filter
            </summary>
        </member>
        <member name="M:Demo.API.Filters.CustomExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            On Exception
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Demo.API.IOCConfig">
            <summary>
            IOC configartion 
            </summary>
        </member>
        <member name="M:Demo.API.IOCConfig.Register(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register IOC configartion 
            </summary>
        </member>
        <member name="T:Demo.API.MappingProfile">
            <summary>
            Profile mappings
            </summary>
        </member>
        <member name="M:Demo.API.MappingProfile.#ctor">
            <summary>
            Mapping entity with Dto
            </summary>
        </member>
        <member name="T:Demo.API.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Demo.API.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Demo.API.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:Demo.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure Services
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Demo.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Configure
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="T:Demo.Filters.ValidatorActionFilter">
            <summary>
            ValidatorActionFilter
            </summary>
        </member>
        <member name="M:Demo.Filters.ValidatorActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:Demo.Filters.ValidatorActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:Demo.Filters.ValidationFailedResult">
            <summary>
            Validation Failed Result
            </summary>
        </member>
        <member name="M:Demo.Filters.ValidationFailedResult.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Constractor
            </summary>
            <param name="modelState"></param>
        </member>
        <member name="T:Demo.Filters.ValidationError">
            <summary>
            Validation Error
            </summary>
        </member>
        <member name="P:Demo.Filters.ValidationError.Field">
            <summary>
            Error Fieldss
            </summary>
        </member>
        <member name="P:Demo.Filters.ValidationError.Message">
            <summary>
            Error Message
            </summary>
        </member>
        <member name="M:Demo.Filters.ValidationError.#ctor(System.String,System.String)">
            <summary>
            Constrator 
            </summary>
            <param name="field"></param>
            <param name="message"></param>
        </member>
        <member name="T:Demo.Filters.ValidationResultModel">
            <summary>
            Validation Result
            </summary>
        </member>
        <member name="P:Demo.Filters.ValidationResultModel.Message">
            <summary>
            Error Message 
            </summary>
        </member>
        <member name="P:Demo.Filters.ValidationResultModel.Errors">
            <summary>
            List of Errors
            </summary>
        </member>
        <member name="M:Demo.Filters.ValidationResultModel.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Validation Result Model.
            </summary>
            <param name="modelState"></param>
        </member>
    </members>
</doc>
